{

	"introduction": {

		"sideBarItems": [
			{
				"content": "Variables",
				"id":"#variables",
				"html": "<html><p>Variables</p></html>",
				"css": "//code",
				"js": "var message = 'Hello World';"
			},
			{
				"content": "Types",
				"id":"#types",
				"html": "<html><p>Types</p></html>",
				"css": "//code",
				"js": "var name = 'Paul Fitzgerald';var age = 24;var student = true;var cities = ['Toronto', 'Paris', 'London'];var body = {'eyes': 'brown','height': 175, 'hair': ['dark', 'short']}"
			},
			{
				"content": "Conditional",
				"id":"#conditional",
				"html": "<html><p>Conditional Statements</p></html>",
				"css": "//code",
				"js": "var name = 'Paul Fitzgerald';var age = 24;var student = true;var cities = ['Toronto', 'Paris', 'London'];var body = {'eyes': 'brown','height': 175,'hair': ['dark', 'short']};if (student) {alert(name + 'is a student ');}if (age < 18) {alert(name + 'is a minor ');} else {alert(name + 'is an adult ');}"
			},
			{
				"content": "Loops",
				"id":"#loops",
				"html": "<html><p>Loops</p></html>",
				"css": "//code",
				"js": "var name = 'Peter';var cities = ['Toronto', 'Paris', 'London'];alert(name + ' has been to:');cities.forEach(function(city) {alert(city);});"
			},
			{
				"content": "Referencing an Array or Object item",
				"id": "#reference",
				"html": "<html><p>Referencing an Array or Object item</p></html>",
				"css": "//code",
				"js": "var cities = ['Toronto', 'Paris', 'London'];var body = {'eyes': 'brown','height': 175, 'hair': ['dark', 'short']}alert('The first city is ' + cities[0]);alert(name + ' is ' + body.height + 'cm tall');"
			},
			{
				"content": "Functions",
				"id": "#functions",
				"html": "<html><p>Referencing an Array or Object item</p></html>",
				"css": "//code",
				"js": "function add(x, y){console.log(x + y);}add(10, 5);"

			}
		],

		"information": [
			{
        		"header": "Variables",
				"id":"variables",
        		"content": "<div class='step-explanation'><p>A variable is a named element that can contain a value.<p></div>"
      		},
	    	{
	        	"header": "Types",
				"id":"types",
	        	"content": "<div class='step-explanation'><p>There are different types of variables in JavaScript. Each of them has different capabilities.</p><ul><li><span class='bold'>strings:</span> which is text that can contain letters, numbers, spaces…</li><li><span class='bold'>numbers:</span> which can be negative, decimal, fractional… and on which you can perform operations</li><li><span class='bold'>booleans:</span> which can only be either <span class='code'>true</span> or <span class='code'>false</span></li><li><span class='bold'>arrays:</span> which are ordered lists of other variables</li><li><span class='bold'>objects:</span> which are unordered lists of key/value combinations</li></ul></div>"
	      	},
	    	{
	        	"header": "Conditional",
				"id":"conditional",
	        	"content": "<div class='step-explanation'><p>Conditional statements are used to perform different actions based on different conditions.</p><p>In JavaScript we can use <span class='code'>if/else</span> statements</p></div>"
	      	},
      		{
        		"header": "Loops",
				"id":"loops",
        		"content": "<div class='step-explanation'><p>Loops can execute a block of code a number of times.</p><p> Loops are handy, if you want to run the same code over and over again, each time with a different value, which is often the case when working with arrays.</p></div>"
      		},
			{
        		"header": "Referencing an Array or Object item",
				"id":"reference",
        		"content": "<div class='step-explanation'><p>If you want to access a specific element of an array, you can use the syntax <span class='code'>cities[0]</span>, where 0 (zero) is the index of the element you want to access.</p><p>For an object, you can simply use the key: <span class='code'>body.eyes</span> or <span class='code'>body['eyes']</span>.</p></div>"
      		},
      		{
      			"header": "Functions",
				"id":"functions",
      			"content": "<div class='step-explanation'><p>A JavaScript function is a block of code designed to perform a particular task.</p><p>A JavaScript function is executed when something invokes it (calls it).</p></div>"
      		}
    	]

	},

	"lessonOne": {
		"sideBarItems": [
			{
				"content": "jQuery introduction",
				"id":"#jquery-intro",
				"html": "<html><head><script src='https://ajax.googleapis.com/ajax/libs/jquery/3.2.0/jquery.min.js'></script></head><body><p>Section</p></body></html>",
				"css": "//code",
				"js": "$('body').css('background-color', 'red');"
			},
			{
				"content": "jQuery Selectors",
				"id":"#jquery-selectors",
				"html": "<html><head><script src='https://ajax.googleapis.com/ajax/libs/jquery/3.2.0/jquery.min.js'></script></head><body><p>Section</p></body></html>",
				"css": "//code",
				"js": "$('p');"
			},
			{
				"content": "jQuery HTML",
				"id":"#jquery-html",
				"html": "<html><head><script src='https://ajax.googleapis.com/ajax/libs/jquery/3.2.0/jquery.min.js'></script></head><body><p>Section</p></body></html>",
				"css": "//code",
				"js": "$('p').click(function(){$('p').css('font-size', '24px');});"
			},
			{
				"content": "jQuery Events",
				"id":"#jquery-events",
				"html": "<html><head><script src='https://ajax.googleapis.com/ajax/libs/jquery/3.2.0/jquery.min.js'></script></head><body><p>Section</p></body></html>",
				"css": "//code",
				"js": "$('p').click(function(){$('p').css('display', 'none');});"
			},
			{
				"content": "jQuery Effects",
				"id":"#jquery-effects",
				"html": "<html><head><script src='https://ajax.googleapis.com/ajax/libs/jquery/3.2.0/jquery.min.js'></script></head><body><p>Section</p></body></html>",
				"css": "//code",
				"js": "$('p').click(function(){$('p').hide();});"
			},
			{
				"content": "Slideshow",
				"id":"#slideshow",
				"html": "<script src='https://ajax.googleapis.com/ajax/libs/jquery/3.2.0/jquery.min.js'></script><div class='slideshow'><img class='slideshow-img' /></div>",
				"css": "//code",
				"js": "var images = ['https://farm6.static.flickr.com/5224/5658667829_2bb7d42a9c_m.jpg', 'https://farm6.static.flickr.com/5230/5638093881_a791e4f819_m.jpg'],index = 0;setInterval(function() {if(index === images.length){index = 0;$('.slideshow-img').attr('src', images[index]);} else {$('.slideshow-img').attr('src', images[index])}});"
			}
		],
		"information": [
			{
				"header": "jQuery introduction",
				"id":"jquery-intro",
				"content": "<div class='step-explanation'><p>jQuery makes it much easier to use JavaScript on your website.</p><p>The easiest way to use on your website is to include from a CDN.</p></div>"
			},
			{
				"header": "jQuery Selectors",
				"id":"jquery-selectors",
				"content": "<div class='step-explanation'><p>jQuery selectors are used to 'find' (or select) HTML elements based on their id, classes, types and much more.</p></div>"
			},
			{
				"header": "jQuery HTML",
				"id":"jquery-html",
				"content": "<div class='step-explanation'><p>One very important part of jQuery is the possibility to manipulate the DOM.</p><p>jQuery comes with a bunch of DOM related methods that make it easy to access and manipulate elements and attributes.</p></div>"
			},
			{
				"header": "jQuery Events",
				"id":"jquery-events",
				"content": "<div class='step-explanation'><p>Events are actions that can be detected by your Web Application.</p><p>You can attach events to things like a mouse click, hovering over an element or a keystroke on your keyboard.</p></div>"
			},
			{
				"header": "jQuery Effects",
				"id":"jquery-effects",
				"content": "<div class='step-explanation'><p>Jquery allows us to Hide, Show, Toggle, Slide, Fade, and Animate.</p></div>"
			},
			{
				"header": "Create Slideshow",
				"id":"slideshow",
				"content": "<div class='step-explanation'><p>Using the topics we have already covered we can create a slideshow.</p></div>"
			}
		]
	},

	"lessonTwo": {
		"sideBarItems": [
			{
				"content": "AJAX introduction",
				"id":"#ajax-intro",
				"html": "<html></html>",
				"css": "//code",
				"js": "//code"
			},
			{
				"content": "AJAX GET request",
				"id":"#ajax-get",
				"html": "<html></html>",
				"css": "//code",
				"js": "//code"
			},
			{
				"content": "AJAX POST request",
				"id":"#ajax-post",
				"html": "<html></html>",
				"css": "//code",
				"js": "//code"
			},
			{
				"content": "JSON intro",
				"id":"#json-intro",
				"html": "<html></html>",
				"css": "//code",
				"js": "//code"
			}
		],
		"information": [
			{
				"header": "AJAX introduction",
				"id":"ajax-intro",
				"content": "<div class='step-explanation'><p>AJAX is the art of exchanging data with a server, and updating parts of a web page - without reloading the whole page.</p></div>"
			},
			{
				"header": "AJAX GET request",
				"id":"ajax-intro",
				"content": "<div class='step-explanation'><p>GET is basically used for just getting (retrieving) some data from the server.</p></div>"
			},
			{
				"header": "AJAX POST request",
				"id":"ajax-post",
				"content": "<div class='step-explanation'><p>POST can also be used to get some data from the server.</p></div>"
			},
			{
				"header": "JSON intro",
				"id":"json-intro",
				"content": "<div class='step-explanation'><p>When exchanging data between a browser and a server, the data can only be text.</p><p>JSON is text, and we can convert any JavaScript object into JSON, and send JSON to the server.</p><p>We can also convert any JSON received from the server into JavaScript objects.</p></div>"
			}
		]



	}


}
